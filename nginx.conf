# Set a custom log format with request and response details
log_format custom_format '$remote_addr - $remote_user [$time_local] "$request" '
                          'status: $status, '
                          'request_uri: $request_uri, '
                          'proxy_response_code: $upstream_status, '
                          'proxy_address: $upstream_addr';

# Enable the custom access log for general requests
access_log /var/log/nginx/access.log custom_format;

server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
}

server {
    listen 56886 ssl;
    server_name localhost;

    ssl_certificate /etc/ssl/certs/webclient.crt;
    ssl_certificate_key /etc/ssl/private/webclient.key;

    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri /index.html;
    }

    # Proxy API requests to Flask backend
    location /api/ {
        # Log request and proxy response details
        access_log /var/log/nginx/api_access.log custom_format;  # Log API specific requests

        rewrite ^/api/(.*)$ /$1 break;  # Remove "/api" prefix before forwarding to backend
        proxy_pass https://appservice:56885/;

		# Trust the self-signed certificate (instead of verifying against CA)
		proxy_ssl_certificate /etc/ssl/certs/webclient.crt;
		proxy_ssl_certificate_key /etc/ssl/private/webclient.key;
		proxy_ssl_trusted_certificate /etc/ssl/certs/appservice.crt;  # The self-signed certificate

		proxy_ssl_verify off;  # Disable verification for self-signed certs

        # Pass headers correctly for the Flask app
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Allow large request bodies if needed
        client_max_body_size 10M;

        # Add CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    }

    # Redirect 404 errors to index.html for React SPA
    error_page 404 /index.html;
}
